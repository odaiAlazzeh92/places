{"version":3,"file":"static/js/793.2022864c.chunk.js","mappings":"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","sources":["places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport \"./PlaceItem.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport default function PlaceItem(props) {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/api/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <iframe\r\n            title=\"map\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            marginHeight=\"0\"\r\n            marginWidth=\"0\"\r\n            src={\r\n              \"https://maps.google.com/maps?q=\" +\r\n              props.coordinates.lat.toString() +\r\n              \",\" +\r\n              props.coordinates.lng.toString() +\r\n              \"&t=&z=15&ie=UTF8&iwloc=&output=embed\"\r\n            }\r\n          ></iframe>\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165\"\r\n          ></script>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"Place-item__modal-actions\"\r\n        footer={\r\n          <>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone therafter\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={process.env.REACT_APP_BACKEND_URL + `/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","\r\n\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\"\r\nimport \"./PlaceList.css\";\r\n\r\nexport default function PlaceList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found, Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport function Component(props) {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { userId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const requestData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/api/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(requestData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      { isLoading && <div className=\"center\"><LoadingSpinner asOverlay/></div>}\r\n      { !isLoading && loadedPlaces && <PlaceList items={loadedPlaces} />}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nComponent.displayName = \"UserPlaces\";\r\n"],"names":["PlaceItem","props","auth","useContext","AuthContext","navigate","useNavigate","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","showMap","setShowMap","_useState3","_useState4","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","process","concat","id","Authorization","token","t0","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","src","coordinates","lat","toString","lng","type","inverse","danger","Card","LoadingSpinner","asOverlay","image","alt","description","userId","creatorId","to","PlaceList","items","length","map","place","creator","location","Component","loadedPlaces","setLoadedPlaces","useParams","useEffect","fetchPlaces","requestData","sent","places","displayName"],"sourceRoot":""}