{"version":3,"file":"static/js/99.dcb51027.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./PlaceForm.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nexport function Component() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/api/places\",\r\n        \"POST\",\r\n        formData,\r\n        { Authorization: `Bearer ` + authCtx.token }\r\n      );\r\n      navigate(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          element=\"input\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters)\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nComponent.displayName = \"NewPlace\";\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    \r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        ref={filePickerRef}\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function Input(props) {\r\n  const initialState = {\r\n    value: props.value || \"\",\r\n    isValid: props.valid || false,\r\n    isTouched: false,\r\n  };\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, onInput, value, isValid]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        row={props.row || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const input in state.inputs) {\r\n        if(!state.inputs[input]){\r\n          continue\r\n        }\r\n        if (input === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[input].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n      case \"SET_DATA\":\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid,\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    })\r\n  },[]);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["Component","authCtx","useContext","AuthContext","navigate","useNavigate","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","type","element","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","displayName","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","initialState","valid","_useReducer","useReducer","_useReducer2","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","row","htmlFor","formReducer","formIsValid","input","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","e","f"],"sourceRoot":""}